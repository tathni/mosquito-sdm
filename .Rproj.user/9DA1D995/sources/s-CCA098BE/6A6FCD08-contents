#######################################################
# Author: Tejas Athni
# Project: Flu Vaccine Household Structure

# Description: PUMS individual-level census data processing and analysis
#######################################################

source(here("0-config.R"))


#------------------------------------------------------
# Define unified school district zip codes for analyses
#------------------------------------------------------
ousd_zips <- c(94601, 94602, 94603, 94605, 94606, 94607, 94608, 94609, 
               94610, 94611, 94612, 94618, 94619, 94621, 94705, 94613, 
               94704, 94604, 94614, 94615, 94617, 94622, 94623, 94624, 
               94649, 94659, 94660, 94661, 94666)

wccsd_zips <- c(94530, 94547, 94564, 94707, 94708, 94801, 94803, 94804, 
              94805, 94806, 94850)


#------------------------------------------------------
# Convert Oakland and West Contra Costa unified school district zip codes into census-abiding ZCTAs
#------------------------------------------------------
zip_to_zctas_dictionary <- box_read(828714538612)

ousd_zctas_list <- zip_to_zctas_dictionary$ZCTA[match(ousd_zips, zip_to_zctas_dictionary$ZIP_CODE)] %>% as.numeric()
wccsd_zctas_list <- zip_to_zctas_dictionary$ZCTA[match(wccsd_zips, zip_to_zctas_dictionary$ZIP_CODE)] %>% as.numeric()

ousd_zctas <-
  zctas(state = "CA", cb = F, year = 2010, progress_bar = F) %>%
  filter(ZCTA5CE10 %in% ousd_zctas_list)

wccsd_zctas <-
  zctas(state = "CA", cb = F, year = 2010, progress_bar = F) %>%
  filter(ZCTA5CE10 %in% wccsd_zctas_list)


#------------------------------------------------------
# Acquire geodata on the PUMAs whose centroids are within the ZCTAs for OUSD and WCCSD
#------------------------------------------------------
ca_pumas <-
  pumas("CA", cb = T, progress_bar = F)

ousd_pumas <-
  ca_pumas %>% 
  st_centroid() %>% 
  .[ousd_zctas, ] %>% 
  st_set_geometry(NULL) %>% 
  left_join(ca_pumas %>% select(GEOID10)) %>% 
  st_as_sf()

wccsd_pumas <-
  ca_pumas %>% 
  st_centroid() %>% 
  .[wccsd_zctas, ] %>% 
  st_set_geometry(NULL) %>% 
  left_join(ca_pumas %>% select(GEOID10)) %>% 
  st_as_sf()


#------------------------------------------------------
# Acquire PUMS data from ACS-5  on the variables of interest
#------------------------------------------------------
ca_pums <- get_pums(
  variables = c(
    "PUMA",
    "AGEP",
    "RAC1P",
    "HISP",
    "HINCP",
    "HICOV",
    "HINS1",
    "HINS2",
    "HINS4"
  ),
  state = "CA",
  year = 2018,
  survey = "acs5",
  recode = T
)


#------------------------------------------------------
# Restrict PUMS data to OUSD and WCCSD geographies
#------------------------------------------------------
bay_pums <-
  ca_pums %>% 
  filter(PUMA %in% ousd_pumas$PUMACE10 |
           PUMA %in% wccsd_pumas$PUMACE10) %>%
  mutate(Unified_School_District = case_when(PUMA %in% ousd_pumas$PUMACE10 ~ "Oakland",
                                             PUMA %in% wccsd_pumas$PUMACE10 ~ "West Contra Costa"))


#------------------------------------------------------
# Obtain quintile cutoffs of the empirical household income distribution
#------------------------------------------------------
income_data <- rep(bay_pums$HINCP, bay_pums$WGTP)
income_quintiles <- quantile(income_data, probs=c(0.2, 0.4, 0.6, 0.8))


## ?? define a policy relevant household distribution, cali assisted housing or public assistance programs 


#------------------------------------------------------
# Create and recode variables for age, race, Hispanic, household income quintile, health insurance, and Medicaid
#------------------------------------------------------
bay_pums$AGEP %<>% as.numeric()
bay_pums$RAC1P %<>% as.numeric()
bay_pums$HISP %<>% as.numeric()
bay_pums$HICOV %<>% as.numeric()
bay_pums$HINS1 %<>% as.numeric()
bay_pums$HINS2 %<>% as.numeric()
bay_pums$HINS4 %<>% as.numeric()

bay_pums %<>%
  mutate(Age = case_when(AGEP %in% c(0:4) ~ "0-4",
                         AGEP %in% c(5:12) ~ "5-12",
                         AGEP %in% c(13:17) ~ "13-17",
                         AGEP %in% c(18:49) ~ "18-49",
                         AGEP %in% c(50:65) ~ "50-65",
                         AGEP %in% c(65:110) ~ "65+"),
         Race = case_when(RAC1P == 1 ~ "White",
                          RAC1P == 2 ~ "Black/African American",
                          RAC1P %in% c(6:7) ~ "Asian/Pacific Islander",
                          RAC1P %in% c(3,4,5,8,9) ~ "Other/Multiple Races"),
         Hispanic = case_when(HISP == 01 ~ 0,
                              !HISP == 01 ~ 1),
         Household_Income_Quintile = case_when(HINCP < income_quintiles[1] ~ 1,
                                               HINCP >= income_quintiles[1] & HINCP < income_quintiles[2] ~ 2,
                                               HINCP >= income_quintiles[2] & HINCP < income_quintiles[3] ~ 3,
                                               HINCP >= income_quintiles[3] & HINCP < income_quintiles[4] ~ 4,
                                               HINCP >= income_quintiles[4] ~ 5),
         Health_Insurance = case_when(HICOV == 1 ~ 1,
                                      HICOV == 2 ~ 0),
         Employer_Insurance = case_when(HINS1 == 1 ~ 1,
                                        HINS1 == 2 ~ 0),
         Private_Insurance = case_when(HINS2 == 1 ~ 1,
                                       HINS2 == 2 ~ 0),
         Medicaid = case_when(HINS4 == 1 ~ 1,
                              HINS4 == 2 ~ 0))



#------------------------------------------------------
# Basic descriptive statistics of PUMS data
#------------------------------------------------------
average_ind_per_hh <- bay_pums %>%
  group_by(SERIALNO) %>%
  summarize(Individuals = max(SPORDER))
average_ind_per_hh <- mean(average_ind_per_hh$Individuals)



## ?? income distributions of private insurance, also see documentation for private insurance overlap w employer


#------------------------------------------------------
# Race/ethnicity aggregate variable at the individual level, with Hispanic ethnicity as an overriding, mutually exclusive variable
#------------------------------------------------------
bay_pums %<>%
  mutate(Race_Ethnicity = case_when(Race == "White" & Hispanic == 0 ~ "White",
                                    Race == "Black/African American" & Hispanic == 0 ~ "Black/African American",
                                    Race == "Asian/Pacific Islander" & Hispanic == 0 ~ "Asian/Pacific Islander",
                                    Race == "Other/Multiple Races" & Hispanic == 0 ~ "Other/Multiple Races",
                                    Race == "White" & Hispanic == 1 ~ "Hispanic",
                                    Race == "Black/African American" & Hispanic == 1 ~ "Hispanic",
                                    Race == "Asian/Pacific Islander" & Hispanic == 1 ~ "Hispanic",
                                    Race == "Other/Multiple Races" & Hispanic == 1 ~ "Hispanic"))


#------------------------------------------------------
# Medicaid indicator variable at the household level for households that contain >= 1 person on MediCAL (Medicaid)
#------------------------------------------------------
bay_pums %<>%
  group_by(SERIALNO) %>%
  mutate(Medicaid_Household = ifelse(sum(Medicaid) >= 1, 1, 0))


#------------------------------------------------------
# Three generation indicator variable at the household level for households that contain a child (5-12) and a senior (65+)
#------------------------------------------------------
bay_pums %<>%
  group_by(SERIALNO) %>%
  mutate(Elementary_Schoolchild_Status = ifelse(AGEP %in% c(5:12), 1, 0),
         Senior_Status = ifelse(AGEP %in% c(65:110), 1, 0)) %>%
  mutate(Elementary_Schoolchild_Household = ifelse(max(Elementary_Schoolchild_Status) >= 1, 1, 0),
         Three_Generation_Household = ifelse(max(Elementary_Schoolchild_Status) + max(Senior_Status) >= 2, 1, 0))


#------------------------------------------------------
# Race indicator variable at the household level, defined as the aggregate race of all household members
#------------------------------------------------------
bay_pums %<>%
  group_by(SERIALNO) %>%
  mutate(Household_Race = case_when(setequal(unique(Race_Ethnicity), c("White")) ~ "White",
                                    setequal(unique(Race_Ethnicity), c("Black/African American")) ~ "Black/African American",
                                    setequal(unique(Race_Ethnicity), c("Asian/Pacific Islander")) ~ "Asian/Pacific Islander",
                                    setequal(unique(Race_Ethnicity), c("Other/Multiple Races")) ~ "Other/Multiple Races",
                                    setequal(unique(Race_Ethnicity), c("Hispanic")) ~ "Hispanic",
                                    setequal(unique(Race_Ethnicity), c("White","Black/African American")) ~ "Other/Multiple Races",
                                    setequal(unique(Race_Ethnicity), c("White","Black/African American","Other/Multiple Races")) ~ "Other/Multiple Races",
                                    setequal(unique(Race_Ethnicity), c("White","Asian/Pacific Islander")) ~ "Other/Multiple Races",
                                    setequal(unique(Race_Ethnicity), c("White","Asian/Pacific Islander","Other/Multiple Races")) ~ "Other/Multiple Races",
                                    setequal(unique(Race_Ethnicity), c("White","Other/Multiple Races")) ~ "Other/Multiple Races",
                                    setequal(unique(Race_Ethnicity), c("White","Hispanic")) ~ "Other/Multiple Races",
                                    setequal(unique(Race_Ethnicity), c("Black/African American","Asian/Pacific Islander")) ~ "Other/Multiple Races",
                                    setequal(unique(Race_Ethnicity), c("Black/African American","Asian/Pacific Islander","Other/Multiple Races")) ~ "Other/Multiple Races",
                                    setequal(unique(Race_Ethnicity), c("Black/African American","Other/Multiple Races")) ~ "Other/Multiple Races",
                                    setequal(unique(Race_Ethnicity), c("Black/African American","Hispanic")) ~ "Other/Multiple Races",
                                    setequal(unique(Race_Ethnicity), c("Asian/Pacific Islander","Other/Multiple Races")) ~ "Other/Multiple Races",
                                    setequal(unique(Race_Ethnicity), c("Asian/Pacific Islander","Hispanic")) ~ "Other/Multiple Races",
                                    setequal(unique(Race_Ethnicity), c("Hispanic","Other/Multiple Races")) ~ "Other/Multiple Races",
                                    setequal(unique(Race_Ethnicity), c("Hispanic","White","Asian/Pacific Islander")) ~ "Other/Multiple Races",
                                    setequal(unique(Race_Ethnicity), c("Hispanic","Black/African American","Asian/Pacific Islander")) ~ "Other/Multiple Races",
                                    setequal(unique(Race_Ethnicity), c("Hispanic","Black/African American","White")) ~ "Other/Multiple Races",
                                    setequal(unique(Race_Ethnicity), c("White","Black/African American","Asian/Pacific Islander")) ~ "Other/Multiple Races",
                                    setequal(unique(Race_Ethnicity), c("Other/Multiple Races","White","Black/African American")) ~ "Other/Multiple Races",
                                    setequal(unique(Race_Ethnicity), c("Other/Multiple Races","White","Asian/Pacific Islander")) ~ "Other/Multiple Races",
                                    setequal(unique(Race_Ethnicity), c("Other/Multiple Races","White","Hispanic")) ~ "Other/Multiple Races",
                                    setequal(unique(Race_Ethnicity), c("Other/Multiple Races","Black/African American","Hispanic")) ~ "Other/Multiple Races",
                                    setequal(unique(Race_Ethnicity), c("Other/Multiple Races","Black/African American","Asian/Pacific Islander")) ~ "Other/Multiple Races",
                                    setequal(unique(Race_Ethnicity), c("Other/Multiple Races","Hispanic","Asian/Pacific Islander")) ~ "Other/Multiple Races",
                                    setequal(unique(Race_Ethnicity), c("Other/Multiple Races","Hispanic","Black/African American","Asian/Pacific Islander")) ~ "Other/Multiple Races",
                                    setequal(unique(Race_Ethnicity), c("White","Black/African American","Asian/Pacific Islander","Other/Multiple Races")) ~ "Other/Multiple Races",
                                    setequal(unique(Race_Ethnicity), c("White","Black/African American","Hispanic","Other/Multiple Races")) ~ "Other/Multiple Races",
                                    setequal(unique(Race_Ethnicity), c("White","Asian/Pacific Islander","Hispanic","Other/Multiple Races")) ~ "Other/Multiple Races",
                                    setequal(unique(Race_Ethnicity), c("White","Asian/Pacific Islander","Hispanic","Black/African American")) ~ "Other/Multiple Races",
                                    setequal(unique(Race_Ethnicity), c("White","Asian/Pacific Islander","Hispanic","Black/African American","Other/Multiple Races")) ~ "Other/Multiple Races"))




#------------------------------------------------------
## INDIVIDUAL LEVEL ANALYSIS ##
#------------------------------------------------------

#------------------------------------------------------
# Summary of individuals by age bracket by household income quintile by school district
#------------------------------------------------------
ind_age_income_district <- bay_pums %>%
  group_by(Age, Household_Income_Quintile, Unified_School_District) %>%
  summarize(Individuals = sum(PWGTP))


#------------------------------------------------------
# Summary of individuals by race by household income quintile by school district
#------------------------------------------------------
ind_race_income_district <- bay_pums %>%
  group_by(Race_Ethnicity, Household_Income_Quintile, Unified_School_District) %>%
  summarize(Individuals = sum(PWGTP))


#------------------------------------------------------
# Summary of Medicaid-insured individuals by race by household income quintile by school district
#------------------------------------------------------
medicaid_ind_age_income_district <- bay_pums %>%
  group_by(Race_Ethnicity, Household_Income_Quintile, Unified_School_District) %>%
  summarize(Medicaid_Individuals = sum(Medicaid * PWGTP))




#------------------------------------------------------
## HOUSEHOLD LEVEL ANALYSIS ##
#------------------------------------------------------

#------------------------------------------------------
# Summary of total households by household race by income quintile by school district
#------------------------------------------------------
hh_race_income_district <- bay_pums %>%
  group_by(SERIALNO, Household_Race, Household_Income_Quintile, Unified_School_District) %>%
  summarize(Households = unique(WGTP)) %>%
  group_by(Household_Race, Household_Income_Quintile, Unified_School_District) %>%
  summarize(Households = sum(Households))


#------------------------------------------------------
# Summary of Medicaid households by household race by income quintile by school district
#------------------------------------------------------
medicaid_hh_race_income_district <- bay_pums %>%
  group_by(SERIALNO, Household_Race, Household_Income_Quintile, Unified_School_District) %>%
  summarize(Medicaid_Households = unique(Medicaid_Household * WGTP)) %>%
  group_by(Household_Race, Household_Income_Quintile, Unified_School_District) %>%
  summarize(Medicaid_Households = sum(Medicaid_Households))


#------------------------------------------------------
# Summary of elementary schoolchild households by household race by income quintile by school district
#------------------------------------------------------
elemschool_hh_race_income_district <- bay_pums %>%
  group_by(SERIALNO, Household_Race, Household_Income_Quintile, Unified_School_District) %>%
  summarize(Elementary_Schoolchild_Households = unique(Elementary_Schoolchild_Household * WGTP)) %>%
  group_by(Household_Race, Household_Income_Quintile, Unified_School_District) %>%
  summarize(Elementary_Schoolchild_Households = sum(Elementary_Schoolchild_Households))


#------------------------------------------------------
# Summary of 3-generation households by household race by income quintile by school district
#------------------------------------------------------
threegen_hh_race_income_district <- bay_pums %>%
  group_by(SERIALNO, Household_Race, Household_Income_Quintile, Unified_School_District) %>%
  summarize(Three_Generation_Households = unique(Three_Generation_Household * WGTP)) %>%
  group_by(Household_Race, Household_Income_Quintile, Unified_School_District) %>%
  summarize(Three_Generation_Households = sum(Three_Generation_Households))


#------------------------------------------------------
# Summary of proportions of Medicaid, elementary schoolchild, and three generation households by race, income, school district
#------------------------------------------------------
prop_hh_race_income_district <- data.frame(
  Household_Race = hh_race_income_district$Household_Race,
  Household_Income_Quintile = hh_race_income_district$Household_Income_Quintile,
  Unified_School_Distrct = hh_race_income_district$Unified_School_District,
  Proportion_Medicaid_Household = medicaid_hh_race_income_district$Medicaid_Households / hh_race_income_district$Households,
  Proportion_Elemschool_Household = elemschool_hh_race_income_district$Elementary_Schoolchild_Households / hh_race_income_district$Households,
  Proportion_Threegen_Household = threegen_hh_race_income_district$Three_Generation_Households / hh_race_income_district$Households)


prop_hh_total <- data.frame(
  Category = c("Medicaid","Elementary Schoolchild","Three Generation"),
  Proportion = c(sum(medicaid_hh_race_income_district$Medicaid_Households) / sum(hh_race_income_district$Households),
                 sum(elemschool_hh_race_income_district$Elementary_Schoolchild_Households) / sum(hh_race_income_district$Households),
                 sum(threegen_hh_race_income_district$Three_Generation_Households) / sum(hh_race_income_district$Households)))




#------------------------------------------------------
## GEO-VISUALIZATIONS ##
#------------------------------------------------------

#------------------------------------------------------
# Census data on a leaflet map
#------------------------------------------------------
pums_pal <- colorNumeric(
  palette = "GnBu",
  domain = bay_pums$HINS4
  )

leaflet() %>%
  addProviderTiles(providers$CartoDB.Positron) %>%
  addPolygons(data = bay_pums %>%
                right_join(ousd_pumas %>% select(PUMA = PUMACE10)) %>%
                st_as_sf(),
              fillColor = ~pums_pal(HINS4),
              color = "white",
              weight = 1,
              label = ~paste0(PUMA,": ", HINS4))


# ????? leaflet map to see how different my unioned PUMAs are from the actual school district zip code regions

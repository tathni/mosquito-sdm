crop(., extent(Africa)) %>% mask(Africa)
precip_RightHemisphere <- predictors_precipSeason %>% mask(predictor_sum_precipSeason) %>%
crop(., extent(RightHemisphere)) %>% mask(RightHemisphere)
precip_Globe <- predictors_precipSeason %>% mask(predictor_sum_precipSeason) %>%
crop(., extent(Globe)) %>% mask(Globe)
#------------------------------------------------------
# Save rasters
#------------------------------------------------------
writeRaster(year_SouthAmerica, filename = "Diagnostic Continent Maps/Year_SouthAmerica.tif", format = "GTiff", overwrite=T)
writeRaster(year_NorthAmerica, filename = "Diagnostic Continent Maps/Year_NorthAmerica.tif", format = "GTiff", overwrite=T)
writeRaster(year_Africa, filename = "Diagnostic Continent Maps/Year_Africa.tif", format = "GTiff", overwrite=T)
writeRaster(year_Oceania, filename = "Diagnostic Continent Maps/Year_Oceania.tif", format = "GTiff", overwrite=T)
writeRaster(year_Europe, filename = "Diagnostic Continent Maps/Year_Europe.tif", format = "GTiff", overwrite=T)
writeRaster(year_Europe_noRussia, filename = "Diagnostic Continent Maps/Year_Europe_noRussia.tif", format = "GTiff", overwrite=T)
writeRaster(year_Asia, filename = "Diagnostic Continent Maps/Year_Asia.tif", format = "GTiff", overwrite=T)
writeRaster(year_SouthAsia, filename = "Diagnostic Continent Maps/Year_SouthAsia.tif", format = "GTiff", overwrite=T)
writeRaster(year_LeftHemisphere, filename = "Diagnostic Continent Maps/Year_LeftHemisphere.tif", format = "GTiff", overwrite=T)
writeRaster(year_RightHemisphere, filename = "Diagnostic Continent Maps/Year_RightHemisphere.tif", format = "GTiff", overwrite=T)
writeRaster(year_Globe, filename = "Diagnostic Continent Maps/Year_Globe.tif", format = "GTiff", overwrite=T)
writeRaster(photo_SouthAmerica, filename = "Diagnostic Continent Maps/Photo_SouthAmerica.tif", format = "GTiff", overwrite=T)
writeRaster(photo_NorthAmerica, filename = "Diagnostic Continent Maps/Photo_NorthAmerica.tif", format = "GTiff", overwrite=T)
writeRaster(photo_Africa, filename = "Diagnostic Continent Maps/Photo_Africa.tif", format = "GTiff", overwrite=T)
writeRaster(photo_Oceania, filename = "Diagnostic Continent Maps/Photo_Oceania.tif", format = "GTiff", overwrite=T)
writeRaster(photo_Europe, filename = "Diagnostic Continent Maps/Photo_Europe.tif", format = "GTiff", overwrite=T)
writeRaster(photo_Europe_noRussia, filename = "Diagnostic Continent Maps/Photo_Europe_noRussia.tif", format = "GTiff", overwrite=T)
writeRaster(photo_Asia, filename = "Diagnostic Continent Maps/Photo_Asia.tif", format = "GTiff", overwrite=T)
writeRaster(photo_SouthAsia, filename = "Diagnostic Continent Maps/Photo_SouthAsia.tif", format = "GTiff", overwrite=T)
writeRaster(photo_LeftHemisphere, filename = "Diagnostic Continent Maps/Photo_LeftHemisphere.tif", format = "GTiff", overwrite=T)
writeRaster(photo_RightHemisphere, filename = "Diagnostic Continent Maps/Photo_RightHemisphere.tif", format = "GTiff", overwrite=T)
writeRaster(photo_Globe, filename = "Diagnostic Continent Maps/Photo_Globe.tif", format = "GTiff", overwrite=T)
writeRaster(precip_Africa, filename = "Diagnostic Continent Maps/Precip_Africa.tif", format = "GTiff", overwrite=T)
writeRaster(precip_RightHemisphere, filename = "Diagnostic Continent Maps/Precip_RightHemisphere.tif", format = "GTiff", overwrite=T)
writeRaster(precip_Globe, filename = "Diagnostic Continent Maps/Precip_Globe.tif", format = "GTiff", overwrite=T)
plot(year_NorthAmerica)
source("E:/Documents/GitHub/mosquito-sdm/0-config.R")
setwd("E:/SynologyDrive/Tejas_Server/! Research/! Mordecai Lab/! Mosquito SDM Thermal Dependence/")
#------------------------------------------------------
## INITIALIZE GEOGRAPHIC RANGES ##
#------------------------------------------------------
#------------------------------------------------------
# Continents
#------------------------------------------------------
SouthAmerica_list <- c("Colombia", "Venezuela", "Suriname", "Guyana", "French Guiana",
"Ecuador", "Peru", "Bolivia", "Chile", "Argentina", "Uruguay",
"Paraguay", "Brazil", "Falkland Islands (Malvinas)")
SouthAmerica <- wrld_simpl[wrld_simpl$NAME %in% SouthAmerica_list, ]
NorthAmerica <- wrld_simpl[wrld_simpl$REGION==19,] %>% .[!NorthAmerica$NAME %in% SouthAmerica_list, ]
Africa <- wrld_simpl[wrld_simpl$REGION==2,]
Oceania <- wrld_simpl[wrld_simpl$REGION==9,]
Europe <- wrld_simpl[wrld_simpl$REGION==150,]
Asia <- wrld_simpl[wrld_simpl$REGION==142,]
#------------------------------------------------------
# Regions
#------------------------------------------------------
SouthAsia_list <- c("India","Pakistan","Nepal","Bangladesh","Sri Lanka", "Bhutan")
SouthAsia <- wrld_simpl[wrld_simpl$NAME %in% SouthAsia_list, ]
Europe_noRussia <- wrld_simpl[wrld_simpl$REGION==150 & !wrld_simpl$NAME == "Russia", ]
#------------------------------------------------------
# Hemispheres
#------------------------------------------------------
LeftHemisphere <- rbind(SouthAmerica, NorthAmerica)
RightHemisphere <- rbind(Africa, Oceania, Europe, Asia)
#------------------------------------------------------
# Entire globe
#------------------------------------------------------
Globe <- rbind(SouthAmerica, NorthAmerica, Africa, Oceania, Europe, Asia)
#------------------------------------------------------
# Load in environmental predictors
#------------------------------------------------------
predictors_preStack <- alply(list.files("Environmental Predictors Merged",
pattern = ".tif",
full.names = TRUE), 1, function(file){
print(file)
rast <- raster(file)
return(rast)
})
rasterNames <- c("ELEV","EVIM","EVISD","FC","HPD","PDQ","PhotoASTM","PhotoASTSD","PrecipASTM","PrecipASTSD","PWQ","TAM","TASD")
predictors_preStack <- setNames(predictors_preStack, rasterNames)
#------------------------------------------------------
# Compress predictors into a stacked raster for each activity season combination
#------------------------------------------------------
predictors_yearRound <- predictors_preStack[c(1:6,11:13)] %>% stack()
predictors_photoSeason <- predictors_preStack[c(1:8,11)] %>% stack()
predictors_precipSeason <- predictors_preStack[c(1:6,9:11)] %>% stack()
predictor_sum_yearRound <- raster("Predictor_Sum_YearRound.tif")
predictor_sum_photoSeason <- raster("Predictor_Sum_PhotoSeason.tif")
predictor_sum_precipSeason <- raster("Predictor_Sum_PrecipSeason.tif")
#######################################################
# Author: Tejas Athni
# Project: Mosquito SDM Thermal Dependence
# Description: Configuration file for all scripts
#######################################################
#------------------------------------------------------
# Load general utility and data handling libraries
#------------------------------------------------------
library(tidyverse)
library(dplyr)
library(plyr)
library(magrittr)
library(tidyr)
library(stringr)
library(readxl)
library(beepr)
library(here)
#------------------------------------------------------
# Load raster, geospatial, and species distribution modeling libraries
#------------------------------------------------------
library(raster)
library(maptools)
library(dismo)
library(rJava)
library(enmSdm)
library(maxnet)
library(rgdal)
library(sf)
library(sp)
library(spThin)
#------------------------------------------------------
# Load XGBoost machine learning, plotting, and visualization libraries
#------------------------------------------------------
library(xgboost)
library(ggplot2)
library(corrplot)
library(pdp)
library(pROC)
library(plotROC)
library(foreach)
library(vip)
library(rBayesianOptimization)
#------------------------------------------------------
# Load map data, set memory limit, and set the seed
#------------------------------------------------------
data(wrld_simpl)
memory.limit(size=56000)
seedNum <- 250
#------------------------------------------------------
# Create dataframes for species of interest, activity season, and commonly referenced items
#------------------------------------------------------
SpeciesOfInterest_Names <- c("Aedes aegypti",
"Aedes albopictus",
"Anopheles gambiae",
"Anopheles stephensi",
"Culex annulirostris",
"Culex pipiens",
"Culex quinquefasciatus",
"Culex tarsalis")
ActivitySeason_Type <- c("None- Year Round",
"Photoperiod",
"Precipitation",
"None- Year Round",
"None- Year Round",
"Photoperiod",
"None- Year Round",
"Photoperiod")
source("E:/Documents/GitHub/mosquito-sdm/0-config.R")
setwd("E:/SynologyDrive/Tejas_Server/! Research/! Mordecai Lab/! Mosquito SDM Thermal Dependence/")
#------------------------------------------------------
## INITIALIZE GEOGRAPHIC RANGES ##
#------------------------------------------------------
#------------------------------------------------------
# Continents
#------------------------------------------------------
SouthAmerica_list <- c("Colombia", "Venezuela", "Suriname", "Guyana", "French Guiana",
"Ecuador", "Peru", "Bolivia", "Chile", "Argentina", "Uruguay",
"Paraguay", "Brazil", "Falkland Islands (Malvinas)")
SouthAmerica <- wrld_simpl[wrld_simpl$NAME %in% SouthAmerica_list, ]
NorthAmerica <- wrld_simpl[wrld_simpl$REGION==19,] %>% .[!NorthAmerica$NAME %in% SouthAmerica_list, ]
Africa <- wrld_simpl[wrld_simpl$REGION==2,]
Oceania <- wrld_simpl[wrld_simpl$REGION==9,]
Europe <- wrld_simpl[wrld_simpl$REGION==150,]
Asia <- wrld_simpl[wrld_simpl$REGION==142,]
#------------------------------------------------------
# Regions
#------------------------------------------------------
SouthAsia_list <- c("India","Pakistan","Nepal","Bangladesh","Sri Lanka", "Bhutan")
SouthAsia <- wrld_simpl[wrld_simpl$NAME %in% SouthAsia_list, ]
Europe_noRussia <- wrld_simpl[wrld_simpl$REGION==150 & !wrld_simpl$NAME == "Russia", ]
#------------------------------------------------------
# Hemispheres
#------------------------------------------------------
LeftHemisphere <- rbind(SouthAmerica, NorthAmerica)
RightHemisphere <- rbind(Africa, Oceania, Europe, Asia)
#------------------------------------------------------
# Entire globe
#------------------------------------------------------
Globe <- rbind(SouthAmerica, NorthAmerica, Africa, Oceania, Europe, Asia)
#------------------------------------------------------
# Load in environmental predictors
#------------------------------------------------------
predictors_preStack <- alply(list.files("Environmental Predictors Merged",
pattern = ".tif",
full.names = TRUE), 1, function(file){
print(file)
rast <- raster(file)
return(rast)
})
rasterNames <- c("ELEV","EVIM","EVISD","FC","HPD","PDQ","PhotoASTM","PhotoASTSD","PrecipASTM","PrecipASTSD","PWQ","TAM","TASD")
predictors_preStack <- setNames(predictors_preStack, rasterNames)
#------------------------------------------------------
# Compress predictors into a stacked raster for each activity season combination
#------------------------------------------------------
predictors_yearRound <- predictors_preStack[c(1:6,11:13)] %>% stack()
predictors_photoSeason <- predictors_preStack[c(1:8,11)] %>% stack()
predictors_precipSeason <- predictors_preStack[c(1:6,9:11)] %>% stack()
predictor_sum_yearRound <- raster("Predictor_Sum_YearRound.tif")
predictor_sum_photoSeason <- raster("Predictor_Sum_PhotoSeason.tif")
predictor_sum_precipSeason <- raster("Predictor_Sum_PrecipSeason.tif")
source("E:/Documents/GitHub/mosquito-sdm/0-config.R")
setwd("E:/SynologyDrive/Tejas_Server/! Research/! Mordecai Lab/! Mosquito SDM Thermal Dependence/")
#------------------------------------------------------
## INITIALIZE GEOGRAPHIC RANGES ##
#------------------------------------------------------
#------------------------------------------------------
# Continents
#------------------------------------------------------
SouthAmerica_list <- c("Colombia", "Venezuela", "Suriname", "Guyana", "French Guiana",
"Ecuador", "Peru", "Bolivia", "Chile", "Argentina", "Uruguay",
"Paraguay", "Brazil", "Falkland Islands (Malvinas)")
SouthAmerica <- wrld_simpl[wrld_simpl$NAME %in% SouthAmerica_list, ]
NorthAmerica <- wrld_simpl[wrld_simpl$REGION==19,] %>% .[!NorthAmerica$NAME %in% SouthAmerica_list, ]
Africa <- wrld_simpl[wrld_simpl$REGION==2,]
Oceania <- wrld_simpl[wrld_simpl$REGION==9,]
Europe <- wrld_simpl[wrld_simpl$REGION==150,]
Asia <- wrld_simpl[wrld_simpl$REGION==142,]
#------------------------------------------------------
## INITIALIZE GEOGRAPHIC RANGES ##
#------------------------------------------------------
#------------------------------------------------------
# Continents
#------------------------------------------------------
SouthAmerica_list <- c("Colombia", "Venezuela", "Suriname", "Guyana", "French Guiana",
"Ecuador", "Peru", "Bolivia", "Chile", "Argentina", "Uruguay",
"Paraguay", "Brazil", "Falkland Islands (Malvinas)")
SouthAmerica <- wrld_simpl[wrld_simpl$NAME %in% SouthAmerica_list, ]
NorthAmerica <- wrld_simpl[wrld_simpl$REGION==19,]
North America %<>% .[!NorthAmerica$NAME %in% SouthAmerica_list, ]
Africa <- wrld_simpl[wrld_simpl$REGION==2,]
Oceania <- wrld_simpl[wrld_simpl$REGION==9,]
Europe <- wrld_simpl[wrld_simpl$REGION==150,]
Asia <- wrld_simpl[wrld_simpl$REGION==142,]
#------------------------------------------------------
## INITIALIZE GEOGRAPHIC RANGES ##
#------------------------------------------------------
#------------------------------------------------------
# Continents
#------------------------------------------------------
SouthAmerica_list <- c("Colombia", "Venezuela", "Suriname", "Guyana", "French Guiana",
"Ecuador", "Peru", "Bolivia", "Chile", "Argentina", "Uruguay",
"Paraguay", "Brazil", "Falkland Islands (Malvinas)")
SouthAmerica <- wrld_simpl[wrld_simpl$NAME %in% SouthAmerica_list, ]
NorthAmerica <- wrld_simpl[wrld_simpl$REGION==19,]
NorthAmerica %<>% .[!NorthAmerica$NAME %in% SouthAmerica_list, ]
Africa <- wrld_simpl[wrld_simpl$REGION==2,]
Oceania <- wrld_simpl[wrld_simpl$REGION==9,]
Europe <- wrld_simpl[wrld_simpl$REGION==150,]
Asia <- wrld_simpl[wrld_simpl$REGION==142,]
#------------------------------------------------------
# Regions
#------------------------------------------------------
SouthAsia_list <- c("India","Pakistan","Nepal","Bangladesh","Sri Lanka", "Bhutan")
SouthAsia <- wrld_simpl[wrld_simpl$NAME %in% SouthAsia_list, ]
Europe_noRussia <- wrld_simpl[wrld_simpl$REGION==150 & !wrld_simpl$NAME == "Russia", ]
#------------------------------------------------------
# Hemispheres
#------------------------------------------------------
LeftHemisphere <- rbind(SouthAmerica, NorthAmerica)
RightHemisphere <- rbind(Africa, Oceania, Europe, Asia)
#------------------------------------------------------
# Entire globe
#------------------------------------------------------
Globe <- rbind(SouthAmerica, NorthAmerica, Africa, Oceania, Europe, Asia)
#------------------------------------------------------
# Load in environmental predictors
#------------------------------------------------------
predictors_preStack <- alply(list.files("Environmental Predictors Merged",
pattern = ".tif",
full.names = TRUE), 1, function(file){
print(file)
rast <- raster(file)
return(rast)
})
rasterNames <- c("ELEV","EVIM","EVISD","FC","HPD","PDQ","PhotoASTM","PhotoASTSD","PrecipASTM","PrecipASTSD","PWQ","TAM","TASD")
predictors_preStack <- setNames(predictors_preStack, rasterNames)
#------------------------------------------------------
# Compress predictors into a stacked raster for each activity season combination
#------------------------------------------------------
predictors_yearRound <- predictors_preStack[c(1:6,11:13)] %>% stack()
predictors_photoSeason <- predictors_preStack[c(1:8,11)] %>% stack()
predictors_precipSeason <- predictors_preStack[c(1:6,9:11)] %>% stack()
predictor_sum_yearRound <- raster("Predictor_Sum_YearRound.tif")
predictor_sum_photoSeason <- raster("Predictor_Sum_PhotoSeason.tif")
predictor_sum_precipSeason <- raster("Predictor_Sum_PrecipSeason.tif")
#------------------------------------------------------
## CREATE CONTINENT, REGION, HEMISPHERE, GLOBE MAPS BY ACTIVITY SEASON ##
#------------------------------------------------------
#------------------------------------------------------
# Year round
#------------------------------------------------------
year_SouthAmerica <- predictors_yearRound %>% mask(predictor_sum_yearRound) %>%
crop(., extent(SouthAmerica)) %>% mask(SouthAmerica)
year_NorthAmerica <- predictors_yearRound %>% mask(predictor_sum_yearRound) %>%
crop(., extent(NorthAmerica)) %>% mask(NorthAmerica)
year_Africa <- predictors_yearRound %>% mask(predictor_sum_yearRound) %>%
crop(., extent(Africa)) %>% mask(Africa)
year_Oceania <- predictors_yearRound %>% mask(predictor_sum_yearRound) %>%
crop(., extent(Oceania)) %>% mask(Oceania)
year_Europe <- predictors_yearRound %>% mask(predictor_sum_yearRound) %>%
crop(., extent(Europe)) %>% mask(Europe)
year_Europe_noRussia <- predictors_yearRound %>% mask(predictor_sum_yearRound) %>%
crop(., extent(Europe_noRussia)) %>% mask(Europe_noRussia)
year_Asia <- predictors_yearRound %>% mask(predictor_sum_yearRound) %>%
crop(., extent(Asia)) %>% mask(Asia)
year_SouthAsia <- predictors_yearRound %>% mask(predictor_sum_yearRound) %>%
crop(., extent(SouthAsia)) %>% mask(SouthAsia)
year_LeftHemisphere <- predictors_yearRound %>% mask(predictor_sum_yearRound) %>%
crop(., extent(LeftHemisphere)) %>% mask(LeftHemisphere)
year_RightHemisphere <- predictors_yearRound %>% mask(predictor_sum_yearRound) %>%
crop(., extent(RightHemisphere)) %>% mask(RightHemisphere)
year_Globe <- predictors_yearRound %>% mask(predictor_sum_yearRound) %>%
crop(., extent(Globe)) %>% mask(Globe)
dev.off()
dev.off()
plot(year_SouthAmerica)
dev.off()
?crop
year_SouthAmerica <- predictors_yearRound %>% mask(predictor_sum_yearRound) %>%
mask(SouthAmerica) %>% crop(., extent(SouthAmerica))
year_SouthAmerica <- predictors_yearRound %>% #mask(predictor_sum_yearRound) %>%
crop(extent(SouthAmerica)) %>% mask(SouthAmerica)
#------------------------------------------------------
## CREATE CONTINENT, REGION, HEMISPHERE, GLOBE MAPS BY ACTIVITY SEASON ##
#------------------------------------------------------
#------------------------------------------------------
# Year round
#------------------------------------------------------
year_SouthAmerica <- predictors_yearRound %>% mask(predictor_sum_yearRound) %>%
crop(extent(SouthAmerica)) %>% mask(SouthAmerica)
year_NorthAmerica <- predictors_yearRound %>% mask(predictor_sum_yearRound) %>%
crop(extent(NorthAmerica)) %>% mask(NorthAmerica)
year_Africa <- predictors_yearRound %>% mask(predictor_sum_yearRound) %>%
crop(extent(Africa)) %>% mask(Africa)
year_Oceania <- predictors_yearRound %>% mask(predictor_sum_yearRound) %>%
crop(extent(Oceania)) %>% mask(Oceania)
year_Europe <- predictors_yearRound %>% mask(predictor_sum_yearRound) %>%
crop(extent(Europe)) %>% mask(Europe)
year_Europe_noRussia <- predictors_yearRound %>% mask(predictor_sum_yearRound) %>%
crop(extent(Europe_noRussia)) %>% mask(Europe_noRussia)
year_Asia <- predictors_yearRound %>% mask(predictor_sum_yearRound) %>%
crop(extent(Asia)) %>% mask(Asia)
year_SouthAsia <- predictors_yearRound %>% mask(predictor_sum_yearRound) %>%
crop(extent(SouthAsia)) %>% mask(SouthAsia)
year_LeftHemisphere <- predictors_yearRound %>% mask(predictor_sum_yearRound) %>%
crop(extent(LeftHemisphere)) %>% mask(LeftHemisphere)
year_RightHemisphere <- predictors_yearRound %>% mask(predictor_sum_yearRound) %>%
crop(extent(RightHemisphere)) %>% mask(RightHemisphere)
year_Globe <- predictors_yearRound %>% mask(predictor_sum_yearRound) %>%
crop(extent(Globe)) %>% mask(Globe)
plot(year_SouthAmerica)
writeRaster(year_SouthAmerica, filename = "Diagnostic Continent Maps/Year_SouthAmerica.tif", format = "GTiff", overwrite=T)
source("E:/Documents/GitHub/mosquito-sdm/0-config.R")
setwd("E:/SynologyDrive/Tejas_Server/! Research/! Mordecai Lab/! Mosquito SDM Thermal Dependence/")
aegypti_shapefile <- readRDS("Shapefile_AedesAegypti.RDS")
aegypti_shapefile <- readRDS("Ecoregion Outputs/Shapefile_AedesAegypti.RDS")
gambiae_shapefile <- readRDS("Ecoregion Outputs/Shapefile_AnophelesGambiae.RDS")
gambiae_points <- readRDS("Ecoregion Outputs/BufferedPoints_AnophelesGambiae.RDS")
plot(gambiae_shapefile)
plot(gambiae_points)
plot(gambiae_shapefile)
plot(gambiae_points, color="red",add=T)
plot(gambiae_shapefile)
plot(gambiae_points, col="red", add=T)
install.packages('ggsn')
library(ggsn)
scalebar(gambiae_points, add=T)
ggplot(gambiae_shapefile)
ggplot() + geom_sf(data = gambiae_shapefile)
ggplot() + geom_sf(data = gambiae_shapefile) +
geom_point(gambiae_points, col = "red")
ggplot() + geom_sf(data = gambiae_shapefile) +
geom_sf(gambiae_points, col = "red")
ggplot() + geom_sf(gambiae_points)
View(gambiae_points)
ggplot() + geom_sf(data = gambiae_shapefile) +
geom_sf(st_as_sf(gambiae_points), col = "red")
class(gambiae_Shapefile)
class(gambiae_shapefile)
class(gambiae_points)
ggplot() + geom_sf(data = gambiae_shapefile) +
geom_sf(st_sfc(gambiae_points))
ggplot() + geom_sf(data = gambiae_shapefile) +
geom_sf(gambiae_points)
View(gambiae_points)
ggplot() + geom_sf(gambiae_points)
#------------------------------------------------------
## LOAD IN DATA ##
#------------------------------------------------------
tic <- Sys.time()
speciesList <- c("AedesAegypti",
"AedesAlbopictus",
"AnophelesGambiae",
"AnophelesStephensi",
"CulexPipiens",
"CulexQuinquefasciatus",
"CulexTarsalis")
SpeciesOfInterest_Names <- c("Aedes aegypti",
"Aedes albopictus",
"Anopheles gambiae",
"Anopheles stephensi",
"Culex pipiens",
"Culex quinquefasciatus",
"Culex tarsalis")
ecoregions <- read_sf(dsn = "./RESOLVE Ecoregions/Ecoregions2017", layer = "Ecoregions2017") %>%
as("Spatial") %>%
spTransform(CRS("+proj=longlat +datum=WGS84 +no_defs"))
Mosquitoes_SpeciesOfInterest <- read.csv("GBIF Datasets Cleaned/Mosquitoes_SpeciesOfInterest.csv", header = TRUE,
encoding = "UTF-8", stringsAsFactors = FALSE)
i <- 3L
thisSpecies <- filter(Mosquitoes_SpeciesOfInterest, species == SpeciesOfInterest_Names[i])
#### get species points
thisSpecies <- filter(Mosquitoes_SpeciesOfInterest, species == SpeciesOfInterest_Names[i])
paste0("The species of interest is: ", SpeciesOfInterest_Names[i])
occGPS <- dplyr::select(thisSpecies, c(decimalLongitude, decimalLatitude))
occGPS_sf <- st_as_sf(occGPS, coords = c("decimalLongitude", "decimalLatitude"),
crs = 4326, agr = "constant")
View(occGPS_sf)
View(occGPS)
ggplot() + geom_sf(data = gambiae_shapefile) +
geom_point(occGPS)
View(occGPS)
ggplot() + geom_sf(data = gambiae_shapefile) +
geom_point(occGPS, aes(x=decimalLatitude, y=decimalLongitude))
ggplot(gambiae_shapefile)
ggplot(gambiae_shapefile) + geom_sf(data = gambiae_shapefile) +
geom_point(occGPS, aes(x=decimalLatitude, y=decimalLongitude))
ggplot() + geom_sf(data = gambiae_shapefile)
plot(gambiae_shapefile)
plot(gambiae_points, col="red", add=T)
plot(gambiae_shapefile)
plot(occGPS_sf, col="red", add=T)
plot(gambiae_shapefile)
plot(gambiae_shapefile)
plot(occGPS_sf, col="red", add=T)
install.packages('prettymapr')
library(prettymapr)
plotscalebar(style = "bar", linecol = "blue", add=T)
plotscalebar(style = "bar", linecol = "blue")
plotscalebar(params = par("usr"), style = "bar", linecol = "blue")
plotscalebar(params = scalebarparams(), style = "bar", linecol = "blue")
plotscalebar(params = scalebarparams(plotunit = "latlon"), style = "bar", linecol = "blue")
library(raster)
raster::scalebar(200)
uninstall('ggsn')
remove.packages(c('ggsn'))
plot(gambiae_shapefile)
plot(occGPS_sf, col="red", add=T)
raster::scalebar(200, xy=click())
raster::scalebar(200, xy=click())
?st_buffer
plot(gambiae_shapefile)
plot(occGPS_sf, col="red", add=T)
raster::scalebar(200, xy=click())
raster::scalebar(200, xy=click())
#### buffer, 1 degree = 111 km, so 200 km = 1.802 degrees
occGPS_buffered <- st_buffer(occGPS_sf, 200)
paste0("Buffered the points")
plot(occGPS_buffered)
ecoregions <- read_sf(dsn = "./RESOLVE Ecoregions/Ecoregions2017", layer = "Ecoregions2017") %>%
as("Spatial") %>%
spTransform(CRS("+proj=longlat +datum=WGS84 +no_defs"))
Mosquitoes_SpeciesOfInterest <- read.csv("GBIF Datasets Cleaned/Mosquitoes_SpeciesOfInterest.csv", header = TRUE,
encoding = "UTF-8", stringsAsFactors = FALSE)
### select ecoregions that overlap and are adjacent
ecoregions_st <- ecoregions
ecoregions_sf <- ecoregions_st %>% st_as_sf()
ecoregions_sf %>% st_is_valid()
ecoregions_sf %<>% st_make_valid()
ecoregion_inds <- list()
tic <- Sys.time()
occ_by <- 1000
## dataframe with 2 columns, start index and end index, loop through the rows
# second column, lead by 1, and remove the last row
indices <- data.frame(start_index = c(seq(from=1, to=nrow(occGPS_buffered), by=occ_by), nrow(occGPS_buffered)+1)) %>%
mutate(end_index = lead(start_index) - 1) %>%
na.omit()
for(k in 1:nrow(indices)) {
ecoregions_temp <- st_intersects(ecoregions_sf, occGPS_buffered[indices[k,1]:indices[k,2],])
ecoregion_inds <- c(ecoregion_inds,
purrr::map_dbl(ecoregions_temp, function(x) length(x)) %>%
magrittr::is_greater_than(0) %>%
which())
}
ecoregion_intersected_inds <- ecoregion_inds %>% Reduce("c", .) %>% unique
toc <- Sys.time()
newTic <- Sys.time()
ecoregion_cut <- ecoregions_sf[ecoregion_intersected_inds, ] %>% st_union
newToc <- Sys.time()
png(paste0("Ecoregion Outputs/Ecoregions_",speciesList[i],"_Dots.png"), width=1000, height=1000)
plot(st_geometry(ecoregion_cut))
plot(st_geometry(occGPS_sf), col="red", add=T)
dev.off()
png(paste0("Ecoregion Outputs/Ecoregions_",speciesList[i],".png"), width=1000, height=1000)
plot(st_geometry(ecoregion_cut))
dev.off()
saveRDS(ecoregion_cut, paste0("Ecoregion Outputs/Shapefile_",speciesList[i],".RDS"))
saveRDS(ecoregion_intersected_inds, paste0("Ecoregion Outputs/Indices_",speciesList[i],".RDS"))
saveRDS(occGPS_sf, paste0("Ecoregion Outputs/BufferedPoints_",speciesList[i],".RDS"))
plot(ecoregion_cut)
plot(occGPS_buffered, col="red", add=T)
occGPS_bufftest <- st_buffer(occGPS_sf[1], 200)
plot(occGPS_bufftest)
plot(occGPS_bufftest[1])
plot(occGPS_bufftest[1,])

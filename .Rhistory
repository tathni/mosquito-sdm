species_plot <- ggplot() +
geom_sf(data = ecoregions[[i]], color = "black", fill = "lightgrey", alpha = 0.5) +
geom_sf(data = occ, aes(color = "Occurrence"), size = 2, alpha = 0.7, show.legend = "point") +
geom_sf(data = bg, aes(color = "Background"), size = 2, alpha = 0.4, show.legend = "point") +
scale_color_manual(name = "Centroid",
values = c("Occurrence" = "#b80700", "Background" = "#003f91")) +
theme_bw() +
theme(legend.position="bottom") +
ggtitle(SpeciesOfInterest_Names[[i]])
species_maps[[i]] <- species_plot
}
#------------------------------------------------------
# Save maps
#------------------------------------------------------
for(i in 1:length(species_maps)) {
species_plot <- species_maps[[i]]
save_name <- paste0("Raster_Summary_Figures/",SpeciesOfInterest_Underscore[[i]],"_Occ_Bg_on_Ecoregion.pdf")
pdf(save_name)
species_plot
dev.off()
}
#------------------------------------------------------
## 2. ENVIRONMENTAL COVARIATES PLOTS ##
#------------------------------------------------------
#------------------------------------------------------
# Create spaced names with units for plot titles
#------------------------------------------------------
rasterNames_spaced <- c("Cattle Density (animals per 1 sq. km)",
"Enhanced Vegetation Index - Mean",
"Enhanced Vegetation Index - Standard Deviation",
"Forest Cover (%)",
"Human Population Density (persons per 1 sq. km)",
"Precipitation of the Driest Quarter (mm)",
"Photoperiod Activity Season - Temperature Mean (°C)",
"Photoperiod Activity Season - Temperature Standard Deviation (°C)",
"Precipitation Activity Season - Temperature Mean (°C)",
"Precipitation Activity Season - Temperature Standard Deviation (°C)",
"Precipitation of the Wettest Quarter (mm)",
"Surface Water Seasonality (# of months)",
"Temperature Annual Mean (°C)",
"Temperature Annual Standard Deviation (°C)",
"Wind Speed (m/s)")
#------------------------------------------------------
# Plot rasters of environmental covariates
#------------------------------------------------------
for(i in 1:length(predictors_preStack)) {
saveName <- paste0("Raster_Summary_Figures/",rasterNames[[i]],".pdf")
pdf(saveName)
plot(predictors[[i]], main = rasterNames_spaced[i])
dev.off()
}
pdf("HPD_Log.pdf")
plot(log(predictors_preStack[[5]]), main = "Log of Human Population Density")
dev.off()
#------------------------------------------------------
## 4. ACTIVITY SEASON PLOTS ##
#------------------------------------------------------
activitySeason <- alply(list.files("Activity Season Rasters Merged",
pattern = ".tif",
full.names = TRUE), 1, function(file){
print(file)
rast <- raster(file)
return(rast)
})
rasterNames <- c("PhotoAS_FirstDay","PhotoAS_LastDay","PhotoAS_Length","PrecipAS_FirstDay","PrecipAS_LastDay","PrecipAS_Length")
rasterNames_spaced <- c("Photoperiod Activity Season - First Day",
"Photoperiod Activity Season - Last Day",
"Photoperiod Activity Season - Length",
"Precipitation Activity Season - First Day",
"Precipitation Activity Season - Last Day",
"Precipitation Activity Season - Length")
activitySeason %<>% setNames(rasterNames)
for(i in 1:length(activitySeason)) {
saveName <- paste0("Raster_Summary_Figures/",rasterNames[[i]],".pdf")
pdf(saveName)
plot(activitySeason[[i]], main = rasterNames_spaced[i])
dev.off()
}
#------------------------------------------------------
## 2. VARIABLE IMPORTANCE PLOTS ##
#------------------------------------------------------
save_name <- paste0("XGBoost_Figures/",SpeciesOfInterest_Underscore[[i]],"_Variable_Importance_Plot.pdf")
imp_matrix <- xgb.importance(colnames(train_xgb_dmatrix), model = xgb.fit)
pdf(save_name)
xgb.ggplot.importance(imp_matrix) +
theme_bw() +
theme(legend.position="none") +
ggtitle(SpeciesOfInterest_Names[[i]]) +
ylab("Variable Importance (Gain)\n") +
xlab("Predictor Variable\n") +
scale_fill_grey(start=0.6, end=0.6)
dev.off()
#------------------------------------------------------
# Load in environmental predictors and stack by activity season
#------------------------------------------------------
predictors_preStack <- alply(list.files("Environmental Predictors Merged",
pattern = ".tif",
full.names = TRUE), 1, function(file){
print(file)
rast <- raster(file)
return(rast)
})
rasterNames <- c("CD","EVIM","EVISD","FC","HPD","PDQ","PhotoASTM","PhotoASTSD","PrecipASTM","PrecipASTSD","PWQ","SW","TAM","TASD","WS")
predictors_preStack %<>% setNames(rasterNames)
yearRound_index <- c(1:6,11:12,15,13:14)
photoSeason_index <- c(1:6,11:12,15,7:8)
precipSeason_index <- c(1:6,11:12,15,9:10)
predictors_yearRound <- predictors_preStack[yearRound_index] %>% stack()
predictors_photoSeason <- predictors_preStack[photoSeason_index] %>% stack()
predictors_precipSeason <- predictors_preStack[precipSeason_index] %>% stack()
#------------------------------------------------------
# Load in lists
#------------------------------------------------------
SpeciesOfInterest_Names <- c("Aedes aegypti",
"Aedes albopictus",
"Anopheles gambiae",
"Anopheles stephensi",
"Culex annulirostris",
"Culex pipiens",
"Culex quinquefasciatus",
"Culex tarsalis")
SpeciesOfInterest_Underscore <- c("Aedes_aegypti",
"Aedes_albopictus",
"Anopheles_gambiae",
"Anopheles_stephensi",
"Culex_annulirostris",
"Culex_pipiens",
"Culex_quinquefasciatus",
"Culex_tarsalis")
ActivitySeason_Type <- c("None- Year Round",
"Photoperiod",
"Precipitation",
"None- Year Round",
"None- Year Round",
"Photoperiod",
"None- Year Round",
"Photoperiod")
#------------------------------------------------------
# Loop through each species, or if running cluster computing, select the given species
#------------------------------------------------------
for(i in species_inds) {
print(paste0("Species of interest is ", SpeciesOfInterest_Names[[i]]))
#------------------------------------------------------
# Data load-in
#------------------------------------------------------
xgb.fit <- xgb.load(paste0("XGBoost_Outputs/",SpeciesOfInterest_Underscore[[i]],"_XGBoost.model"))
sdm_data <- readRDS(paste0("XGBoost_Outputs/",SpeciesOfInterest_Underscore[[i]],"_SDM_Data_Predictions.RDS"))
train_data <- sdm_data %>% filter(Data_Split == "Training")
train_xgb_dmatrix <- xgb.DMatrix(data = as.matrix(train_data %>% dplyr::select(c(7:17))),
label = as.matrix(train_data %>% dplyr::select(3)))
eval_data <- sdm_data %>% filter(Data_Split == "Evaluation")
eval_xgb_dmatrix <- xgb.DMatrix(data = as.matrix(eval_data %>% dplyr::select(c(7:17))),
label = as.matrix(eval_data %>% dplyr::select(3)))
#------------------------------------------------------
# Select predictors according to activity season
#------------------------------------------------------
if(SpeciesOfInterest_Names[[i]] == "Aedes aegypti" |
SpeciesOfInterest_Names[[i]] == "Anopheles stephensi" |
SpeciesOfInterest_Names[[i]] == "Culex annulirostris" |
SpeciesOfInterest_Names[[i]] == "Culex quinquefasciatus") {
predictor_names <- rasterNames[yearRound_index]
predictors <- predictors_yearRound
}
if(SpeciesOfInterest_Names[[i]] == "Aedes albopictus" |
SpeciesOfInterest_Names[[i]] == "Culex pipiens" |
SpeciesOfInterest_Names[[i]] == "Culex tarsalis") {
predictor_names <- rasterNames[photoSeason_index]
predictors <- predictors_photoSeason
}
if(SpeciesOfInterest_Names[[i]] == "Anopheles gambiae") {
predictor_names <- rasterNames[precipSeason_index]
predictors <- predictors_precipSeason
}
#------------------------------------------------------
## 1. ROC CURVES ##
#------------------------------------------------------
save_name <- paste0("XGBoost_Figures/",SpeciesOfInterest_Underscore[[i]],"_ROC.pdf")
y_train <- train_data$Occ1_or_Bg0
y_eval <- eval_data$Occ1_or_Bg0
pred_train <- train_data$Predicted_Value
pred_eval <- eval_data$Predicted_Value
pdf(save_name)
plot.roc(y_train, pred_train,
print.auc = TRUE,
print.auc.y = 0.4,
identity.col = "grey50",
col = "maroon", lwd = 3,
legacy.axes = TRUE,
grid = TRUE)
plot.roc(y_eval, pred_eval,
add = TRUE,
print.auc = TRUE,
print.auc.y = 0.35,
identity.col = "grey50",
col = "dodgerblue4", lwd = 3,
legacy.axes = TRUE,
grid = TRUE)
legend("bottom",
legend=c("Training","Evaluation","Reference"),
col=c("maroon","dodgerblue4","grey50"),
lwd=5, cex=0.7, xpd = TRUE, horiz = TRUE)
dev.off()
#------------------------------------------------------
## 2. VARIABLE IMPORTANCE PLOTS ##
#------------------------------------------------------
save_name <- paste0("XGBoost_Figures/",SpeciesOfInterest_Underscore[[i]],"_Variable_Importance_Plot.pdf")
imp_matrix <- xgb.importance(colnames(train_xgb_dmatrix), model = xgb.fit)
pdf(save_name)
xgb.ggplot.importance(imp_matrix) +
theme_bw() +
theme(legend.position="none") +
ggtitle(SpeciesOfInterest_Names[[i]]) +
ylab("Variable Importance (Gain)\n") +
xlab("Predictor Variable\n") +
scale_fill_grey(start=0.6, end=0.6)
dev.off()
#------------------------------------------------------
## 3. UNIVARIATE PARTIAL DEPENDENCE PLOTS ##
#------------------------------------------------------
for(k in 1:length(predictor_names)) {
save_name <- paste0("XGBoost_Figures/",SpeciesOfInterest_Underscore[[i]],"_",predictor_names[[k]],"_Univariate.pdf")
pdf(save_name)
plot(pdp::partial(xgb.fit$handle, pred.var = predictor_names[[k]],
train = as.matrix(train_data %>% dplyr::select(c(7:17))),
plot = TRUE, plot.engine = "ggplot2",
chull = TRUE, out = "pdf") +
theme_bw())
dev.off()
}
# ??? pdp's with density histogram underneath?
# ??? Geom_bin2d plots
# ??? (maybe on script 13 not here) maps + ecoregions shaded in + points
# ??? tilted stack of covariate rasters
#------------------------------------------------------
## 4. BIVARIATE PARTIAL DEPENDENCE PLOTS ##
#------------------------------------------------------
if(SpeciesOfInterest_Names[[i]] == "Aedes aegypti" |
SpeciesOfInterest_Names[[i]] == "Anopheles stephensi" |
SpeciesOfInterest_Names[[i]] == "Culex annulirostris" |
SpeciesOfInterest_Names[[i]] == "Culex quinquefasciatus") {
save_name <- paste0("XGBoost_Figures/",SpeciesOfInterest_Underscore[[i]],"_TAM_TASD_Bivariate.pdf")
pdf(save_name)
pdp_bivariate <- pdp::partial(xgb.fit$handle, train = as.matrix(train_data %>% dplyr::select(c(7:17))),
pred.var = c("TAM","TASD"), chull = TRUE)
color_scheme <- colorRampPalette(c("lightgrey","blue"))
print(plotPartial(pdp_bivariate, col.regions = color_scheme))
dev.off()
}
if(SpeciesOfInterest_Names[[i]] == "Aedes albopictus" |
SpeciesOfInterest_Names[[i]] == "Culex pipiens" |
SpeciesOfInterest_Names[[i]] == "Culex tarsalis") {
save_name <- paste0("XGBoost_Figures/",SpeciesOfInterest_Underscore[[i]],"_PhotoASTM_PhotoASTSD_Bivariate.pdf")
pdf(save_name)
pdp_bivariate <- pdp::partial(xgb.fit$handle, train = as.matrix(train_data %>% dplyr::select(c(7:17))),
pred.var = c("PhotoASTM","PhotoASTSD"), chull = TRUE)
color_scheme <- colorRampPalette(c("lightgrey","blue"))
print(plotPartial(pdp_bivariate, col.regions = color_scheme))
dev.off()
}
if(SpeciesOfInterest_Names[[i]] == "Anopheles gambiae") {
save_name <- paste0("XGBoost_Figures/",SpeciesOfInterest_Underscore[[i]],"_PrecipASTM_PrecipASTSD_Bivariate.pdf")
pdf(save_name)
pdp_bivariate <- pdp::partial(xgb.fit$handle, train = as.matrix(train_data %>% dplyr::select(c(7:17))),
pred.var = c("PrecipASTM","PrecipASTSD"), chull = TRUE)
color_scheme <- colorRampPalette(c("lightgrey","blue"))
print(plotPartial(pdp_bivariate, col.regions = color_scheme))
dev.off()
}
# #------------------------------------------------------
# ## 5. SPATIAL PREDICTION MAPS OF MOSQUITO OCCURRENCE ##
# #------------------------------------------------------
# xgb_pred_fun <- function(model, data) {
#   predict(model, as.matrix(data))
# }
#
# tic <- Sys.time()
# xgb_spatial_pred <- raster::predict(predictors, xgb.fit, fun=xgb_pred_fun)
# toc <- Sys.time()
# toc - tic  # 47 min
}
for(i in species_inds) {
#------------------------------------------------------
## 2. VARIABLE IMPORTANCE PLOTS ##
#------------------------------------------------------
save_name <- paste0("XGBoost_Figures/Variable_Importance_Plots/",SpeciesOfInterest_Underscore[[i]],"_Variable_Importance_Plot.pdf")
imp_matrix <- xgb.importance(colnames(train_xgb_dmatrix), model = xgb.fit)
pdf(save_name)
xgb.ggplot.importance(imp_matrix) +
theme_bw() +
theme(legend.position="none") +
ggtitle(SpeciesOfInterest_Names[[i]]) +
ylab("Variable Importance (Gain)\n") +
xlab("Predictor Variable\n") +
scale_fill_grey(start=0.6, end=0.6)
dev.off()
}
for(i in species_inds) {
#------------------------------------------------------
## 2. VARIABLE IMPORTANCE PLOTS ##
#------------------------------------------------------
save_name <- paste0("XGBoost_Figures/Variable_Importance_Plots/",SpeciesOfInterest_Underscore[[i]],"_Variable_Importance_Plot.pdf")
imp_matrix <- xgb.importance(colnames(train_xgb_dmatrix), model = xgb.fit)
pdf(save_name)
vip_plot <- xgb.ggplot.importance(imp_matrix) +
theme_bw() +
theme(legend.position="none") +
ggtitle(SpeciesOfInterest_Names[[i]]) +
ylab("Variable Importance (Gain)\n") +
xlab("Predictor Variable\n") +
scale_fill_grey(start=0.6, end=0.6)
print(vip_plot)
dev.off()
}
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
for(i in species_inds) {
#------------------------------------------------------
## 4. BIVARIATE PARTIAL DEPENDENCE PLOTS ##
#------------------------------------------------------
if(SpeciesOfInterest_Names[[i]] == "Aedes aegypti" |
SpeciesOfInterest_Names[[i]] == "Anopheles stephensi" |
SpeciesOfInterest_Names[[i]] == "Culex annulirostris" |
SpeciesOfInterest_Names[[i]] == "Culex quinquefasciatus") {
save_name <- paste0("XGBoost_Figures/Bivariate_PDPs/",SpeciesOfInterest_Underscore[[i]],"_TAM_TASD_Bivariate.pdf")
pdf(save_name)
pdp_bivariate <- pdp::partial(xgb.fit$handle, train = as.matrix(train_data %>% dplyr::select(c(7:17))),
pred.var = c("TAM","TASD"), chull = TRUE)
color_scheme <- colorRampPalette(c("lightgrey","blue"))
print(plotPartial(pdp_bivariate, col.regions = color_scheme))
dev.off()
}
if(SpeciesOfInterest_Names[[i]] == "Aedes albopictus" |
SpeciesOfInterest_Names[[i]] == "Culex pipiens" |
SpeciesOfInterest_Names[[i]] == "Culex tarsalis") {
save_name <- paste0("XGBoost_Figures/Bivariate_PDPs/",SpeciesOfInterest_Underscore[[i]],"_PhotoASTM_PhotoASTSD_Bivariate.pdf")
pdf(save_name)
pdp_bivariate <- pdp::partial(xgb.fit$handle, train = as.matrix(train_data %>% dplyr::select(c(7:17))),
pred.var = c("PhotoASTM","PhotoASTSD"), chull = TRUE)
color_scheme <- colorRampPalette(c("lightgrey","blue"))
print(plotPartial(pdp_bivariate, col.regions = color_scheme))
dev.off()
}
if(SpeciesOfInterest_Names[[i]] == "Anopheles gambiae") {
save_name <- paste0("XGBoost_Figures/Bivariate_PDPs/",SpeciesOfInterest_Underscore[[i]],"_PrecipASTM_PrecipASTSD_Bivariate.pdf")
pdf(save_name)
pdp_bivariate <- pdp::partial(xgb.fit$handle, train = as.matrix(train_data %>% dplyr::select(c(7:17))),
pred.var = c("PrecipASTM","PrecipASTSD"), chull = TRUE)
color_scheme <- colorRampPalette(c("lightgrey","blue"))
print(plotPartial(pdp_bivariate, col.regions = color_scheme))
dev.off()
}
}
dev.ofF()
dev.off()
dev.off()
dev.off()
train = as.matrix(train_data %>% dplyr::select(c(7:17))
)
View(train)
pdp_bivariate <- pdp::partial(xgb.fit$handle, train = as.matrix(train_data %>% dplyr::select(c(7:17))),
pred.var = c("TAM","TASD"), chull = TRUE)
color_scheme <- colorRampPalette(c("lightgrey","blue"))
i <- 1L
#------------------------------------------------------
## 4. BIVARIATE PARTIAL DEPENDENCE PLOTS ##
#------------------------------------------------------
if(SpeciesOfInterest_Names[[i]] == "Aedes aegypti" |
SpeciesOfInterest_Names[[i]] == "Anopheles stephensi" |
SpeciesOfInterest_Names[[i]] == "Culex annulirostris" |
SpeciesOfInterest_Names[[i]] == "Culex quinquefasciatus") {
save_name <- paste0("XGBoost_Figures/Bivariate_PDPs/",SpeciesOfInterest_Underscore[[i]],"_TAM_TASD_Bivariate.pdf")
pdf(save_name)
pdp_bivariate <- pdp::partial(xgb.fit$handle, train = as.matrix(train_data %>% dplyr::select(c(7:17))),
pred.var = c("TAM","TASD"), chull = TRUE)
color_scheme <- colorRampPalette(c("lightgrey","blue"))
print(plotPartial(pdp_bivariate, col.regions = color_scheme))
dev.off()
}
i <- 2L
if(SpeciesOfInterest_Names[[i]] == "Aedes albopictus" |
SpeciesOfInterest_Names[[i]] == "Culex pipiens" |
SpeciesOfInterest_Names[[i]] == "Culex tarsalis") {
save_name <- paste0("XGBoost_Figures/Bivariate_PDPs/",SpeciesOfInterest_Underscore[[i]],"_PhotoASTM_PhotoASTSD_Bivariate.pdf")
pdf(save_name)
pdp_bivariate <- pdp::partial(xgb.fit$handle, train = as.matrix(train_data %>% dplyr::select(c(7:17))),
pred.var = c("PhotoASTM","PhotoASTSD"), chull = TRUE)
color_scheme <- colorRampPalette(c("lightgrey","blue"))
print(plotPartial(pdp_bivariate, col.regions = color_scheme))
dev.off()
}
print(paste0("Species of interest is ", SpeciesOfInterest_Names[[i]]))
#------------------------------------------------------
# Data load-in
#------------------------------------------------------
xgb.fit <- xgb.load(paste0("XGBoost_Outputs/",SpeciesOfInterest_Underscore[[i]],"_XGBoost.model"))
sdm_data <- readRDS(paste0("XGBoost_Outputs/",SpeciesOfInterest_Underscore[[i]],"_SDM_Data_Predictions.RDS"))
train_data <- sdm_data %>% filter(Data_Split == "Training")
train_xgb_dmatrix <- xgb.DMatrix(data = as.matrix(train_data %>% dplyr::select(c(7:17))),
label = as.matrix(train_data %>% dplyr::select(3)))
eval_data <- sdm_data %>% filter(Data_Split == "Evaluation")
eval_xgb_dmatrix <- xgb.DMatrix(data = as.matrix(eval_data %>% dplyr::select(c(7:17))),
label = as.matrix(eval_data %>% dplyr::select(3)))
#------------------------------------------------------
# Select predictors according to activity season
#------------------------------------------------------
if(SpeciesOfInterest_Names[[i]] == "Aedes aegypti" |
SpeciesOfInterest_Names[[i]] == "Anopheles stephensi" |
SpeciesOfInterest_Names[[i]] == "Culex annulirostris" |
SpeciesOfInterest_Names[[i]] == "Culex quinquefasciatus") {
predictor_names <- rasterNames[yearRound_index]
predictors <- predictors_yearRound
}
if(SpeciesOfInterest_Names[[i]] == "Aedes albopictus" |
SpeciesOfInterest_Names[[i]] == "Culex pipiens" |
SpeciesOfInterest_Names[[i]] == "Culex tarsalis") {
predictor_names <- rasterNames[photoSeason_index]
predictors <- predictors_photoSeason
}
if(SpeciesOfInterest_Names[[i]] == "Anopheles gambiae") {
predictor_names <- rasterNames[precipSeason_index]
predictors <- predictors_precipSeason
}
if(SpeciesOfInterest_Names[[i]] == "Aedes albopictus" |
SpeciesOfInterest_Names[[i]] == "Culex pipiens" |
SpeciesOfInterest_Names[[i]] == "Culex tarsalis") {
save_name <- paste0("XGBoost_Figures/Bivariate_PDPs/",SpeciesOfInterest_Underscore[[i]],"_PhotoASTM_PhotoASTSD_Bivariate.pdf")
pdf(save_name)
pdp_bivariate <- pdp::partial(xgb.fit$handle, train = as.matrix(train_data %>% dplyr::select(c(7:17))),
pred.var = c("PhotoASTM","PhotoASTSD"), chull = TRUE)
color_scheme <- colorRampPalette(c("lightgrey","blue"))
print(plotPartial(pdp_bivariate, col.regions = color_scheme))
dev.off()
}
i <- 1L
xgb.fit <- xgb.load(paste0("XGBoost_Outputs/",SpeciesOfInterest_Underscore[[i]],"_XGBoost.model"))
sdm_data <- readRDS(paste0("XGBoost_Outputs/",SpeciesOfInterest_Underscore[[i]],"_SDM_Data_Predictions.RDS"))
train_data <- sdm_data %>% filter(Data_Split == "Training")
train_xgb_dmatrix <- xgb.DMatrix(data = as.matrix(train_data %>% dplyr::select(c(7:17))),
label = as.matrix(train_data %>% dplyr::select(3)))
eval_data <- sdm_data %>% filter(Data_Split == "Evaluation")
eval_xgb_dmatrix <- xgb.DMatrix(data = as.matrix(eval_data %>% dplyr::select(c(7:17))),
label = as.matrix(eval_data %>% dplyr::select(3)))
#------------------------------------------------------
## 4. BIVARIATE PARTIAL DEPENDENCE PLOTS ##
#------------------------------------------------------
if(SpeciesOfInterest_Names[[i]] == "Aedes aegypti" |
SpeciesOfInterest_Names[[i]] == "Anopheles stephensi" |
SpeciesOfInterest_Names[[i]] == "Culex annulirostris" |
SpeciesOfInterest_Names[[i]] == "Culex quinquefasciatus") {
save_name <- paste0("XGBoost_Figures/Bivariate_PDPs/",SpeciesOfInterest_Underscore[[i]],"_TAM_TASD_Bivariate.pdf")
pdf(save_name)
pdp_bivariate <- pdp::partial(xgb.fit$handle, train = as.matrix(train_data %>% dplyr::select(c(7:17))),
pred.var = c("TAM","TASD"), chull = TRUE)
color_scheme <- colorRampPalette(c("lightgrey","blue"))
print(plotPartial(pdp_bivariate, col.regions = color_scheme))
dev.off()
}
i <- 2L
#------------------------------------------------------
# Data load-in
#------------------------------------------------------
xgb.fit <- xgb.load(paste0("XGBoost_Outputs/",SpeciesOfInterest_Underscore[[i]],"_XGBoost.model"))
sdm_data <- readRDS(paste0("XGBoost_Outputs/",SpeciesOfInterest_Underscore[[i]],"_SDM_Data_Predictions.RDS"))
train_data <- sdm_data %>% filter(Data_Split == "Training")
train_xgb_dmatrix <- xgb.DMatrix(data = as.matrix(train_data %>% dplyr::select(c(7:17))),
label = as.matrix(train_data %>% dplyr::select(3)))
eval_data <- sdm_data %>% filter(Data_Split == "Evaluation")
eval_xgb_dmatrix <- xgb.DMatrix(data = as.matrix(eval_data %>% dplyr::select(c(7:17))),
label = as.matrix(eval_data %>% dplyr::select(3)))
#------------------------------------------------------
## 4. BIVARIATE PARTIAL DEPENDENCE PLOTS ##
#------------------------------------------------------
if(SpeciesOfInterest_Names[[i]] == "Aedes aegypti" |
SpeciesOfInterest_Names[[i]] == "Anopheles stephensi" |
SpeciesOfInterest_Names[[i]] == "Culex annulirostris" |
SpeciesOfInterest_Names[[i]] == "Culex quinquefasciatus") {
save_name <- paste0("XGBoost_Figures/Bivariate_PDPs/",SpeciesOfInterest_Underscore[[i]],"_TAM_TASD_Bivariate.pdf")
pdf(save_name)
pdp_bivariate <- pdp::partial(xgb.fit$handle, train = as.matrix(train_data %>% dplyr::select(c(7:17))),
pred.var = c("TAM","TASD"), chull = TRUE)
color_scheme <- colorRampPalette(c("lightgrey","blue"))
print(plotPartial(pdp_bivariate, col.regions = color_scheme))
dev.off()
}
if(SpeciesOfInterest_Names[[i]] == "Aedes albopictus" |
SpeciesOfInterest_Names[[i]] == "Culex pipiens" |
SpeciesOfInterest_Names[[i]] == "Culex tarsalis") {
save_name <- paste0("XGBoost_Figures/Bivariate_PDPs/",SpeciesOfInterest_Underscore[[i]],"_PhotoASTM_PhotoASTSD_Bivariate.pdf")
pdf(save_name)
pdp_bivariate <- pdp::partial(xgb.fit$handle, train = as.matrix(train_data %>% dplyr::select(c(7:17))),
pred.var = c("PhotoASTM","PhotoASTSD"), chull = TRUE)
color_scheme <- colorRampPalette(c("lightgrey","blue"))
print(plotPartial(pdp_bivariate, col.regions = color_scheme))
dev.off()
}
dev.off()
dev.off()
dev.off()
if(SpeciesOfInterest_Names[[i]] == "Aedes albopictus" |
SpeciesOfInterest_Names[[i]] == "Culex pipiens" |
SpeciesOfInterest_Names[[i]] == "Culex tarsalis") {
save_name <- paste0("XGBoost_Figures/Bivariate_PDPs/",SpeciesOfInterest_Underscore[[i]],"_PhotoASTM_PhotoASTSD_Bivariate.pdf")
pdf(save_name)
pdp_bivariate <- pdp::partial(xgb.fit$handle, train = as.matrix(train_data %>% dplyr::select(c(7:17))),
pred.var = c("PhotoASTM","PhotoASTSD"), chull = TRUE)
color_scheme <- colorRampPalette(c("lightgrey","blue"))
print(plotPartial(pdp_bivariate, col.regions = color_scheme))
dev.off()
}
